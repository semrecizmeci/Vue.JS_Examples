<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Loading Page</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100vh;
        background-color: #f0f0f0;
      }
      .loader {
        border: 8px solid #f3f3f3;
        border-top: 8px solid #3498db;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        animation: spin 1s linear infinite;
      }
      table {
        border-collapse: collapse;
        width: 300px;
      }

      th,
      td {
        border: 1px solid black;
        padding: 10px;
        text-align: center;
      }
      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
    </style>
  </head>
  <body>
    <div id="app">
      <!-- ----------------------- -->
      <div v-if="showLoader">
        <div class="loader"></div>
        <p>Loading...</p>
      </div>
      <!-- ----------------------- -->
      <div v-else>
        <table>
          <thead>
            <tr>
              <th>Nation</th>
              <th>Year</th>
              <th>Population</th>
            </tr>
          </thead>
          <tbody>
            <tr v-for="item in filterDatas" :key="item['ID Year']">
              <td>{{ item.Nation }}</td>
              <td>{{ item.Year }}</td>
              <td>{{ item.Population }}</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>

    <script>
      new Vue({
        el: "#app",
        data() {
          return {
            showLoader: true, // Yükleme sayfasını gösterme durumu
          };
        },
        datas() {
          return {
            apiData: [],
          };
        },
        computed: {
          filterDatas() {
            return this.apiData.filter((item) => item.Population > 318558162);
          },
        },
        mounted() {
          setTimeout(() => {
            this.showLoader = false; // Yükleme tamamlandı, gerçek içeriği göster
          }, 2000);
          axios
            .get(
              "https://datausa.io/api/data?drilldowns=Nation&measures=Population"
            )
            .then((response) => {
              this.apiData = response.data.data;
            })
            .catch((error) => {
              console.log("API hatası:", error);
            });
        },
      });
    </script>
  </body>
</html>
